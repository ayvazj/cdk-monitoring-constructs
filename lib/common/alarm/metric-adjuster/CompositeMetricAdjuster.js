"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CompositeMetricAdjuster = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
/**
 * Allows to apply a collection of {@link IMetricAdjuster} to a metric.
 */
class CompositeMetricAdjuster {
    constructor(adjusters) {
        this.adjusters = adjusters;
    }
    static of(...adjusters) {
        return new CompositeMetricAdjuster(adjusters);
    }
    /** @inheritdoc */
    adjustMetric(metric, alarmScope, props) {
        let adjustedMetric = metric;
        for (const adjuster of this.adjusters) {
            adjustedMetric = adjuster.adjustMetric(adjustedMetric, alarmScope, props);
        }
        return adjustedMetric;
    }
}
exports.CompositeMetricAdjuster = CompositeMetricAdjuster;
_a = JSII_RTTI_SYMBOL_1;
CompositeMetricAdjuster[_a] = { fqn: "cdk-monitoring-constructs.CompositeMetricAdjuster", version: "0.0.0" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29tcG9zaXRlTWV0cmljQWRqdXN0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDb21wb3NpdGVNZXRyaWNBZGp1c3Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUtBOztHQUVHO0FBQ0gsTUFBYSx1QkFBdUI7SUFDbEMsWUFBNkIsU0FBNEI7UUFBNUIsY0FBUyxHQUFULFNBQVMsQ0FBbUI7SUFBRyxDQUFDO0lBRTdELE1BQU0sQ0FBQyxFQUFFLENBQUMsR0FBRyxTQUE0QjtRQUN2QyxPQUFPLElBQUksdUJBQXVCLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDaEQsQ0FBQztJQUVELGtCQUFrQjtJQUNsQixZQUFZLENBQ1YsTUFBOEIsRUFDOUIsVUFBcUIsRUFDckIsS0FBb0I7UUFFcEIsSUFBSSxjQUFjLEdBQUcsTUFBTSxDQUFDO1FBQzVCLEtBQUssTUFBTSxRQUFRLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNyQyxjQUFjLEdBQUcsUUFBUSxDQUFDLFlBQVksQ0FBQyxjQUFjLEVBQUUsVUFBVSxFQUFFLEtBQUssQ0FBQyxDQUFDO1NBQzNFO1FBRUQsT0FBTyxjQUFjLENBQUM7SUFDeEIsQ0FBQzs7QUFuQkgsMERBb0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29uc3RydWN0IH0gZnJvbSBcImNvbnN0cnVjdHNcIjtcbmltcG9ydCB7IElNZXRyaWNBZGp1c3RlciB9IGZyb20gXCIuL0lNZXRyaWNBZGp1c3RlclwiO1xuaW1wb3J0IHsgTWV0cmljV2l0aEFsYXJtU3VwcG9ydCB9IGZyb20gXCIuLi8uLi9tZXRyaWNcIjtcbmltcG9ydCB7IEFkZEFsYXJtUHJvcHMgfSBmcm9tIFwiLi4vQWxhcm1GYWN0b3J5XCI7XG5cbi8qKlxuICogQWxsb3dzIHRvIGFwcGx5IGEgY29sbGVjdGlvbiBvZiB7QGxpbmsgSU1ldHJpY0FkanVzdGVyfSB0byBhIG1ldHJpYy5cbiAqL1xuZXhwb3J0IGNsYXNzIENvbXBvc2l0ZU1ldHJpY0FkanVzdGVyIGltcGxlbWVudHMgSU1ldHJpY0FkanVzdGVyIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBhZGp1c3RlcnM6IElNZXRyaWNBZGp1c3RlcltdKSB7fVxuXG4gIHN0YXRpYyBvZiguLi5hZGp1c3RlcnM6IElNZXRyaWNBZGp1c3RlcltdKSB7XG4gICAgcmV0dXJuIG5ldyBDb21wb3NpdGVNZXRyaWNBZGp1c3RlcihhZGp1c3RlcnMpO1xuICB9XG5cbiAgLyoqIEBpbmhlcml0ZG9jICovXG4gIGFkanVzdE1ldHJpYyhcbiAgICBtZXRyaWM6IE1ldHJpY1dpdGhBbGFybVN1cHBvcnQsXG4gICAgYWxhcm1TY29wZTogQ29uc3RydWN0LFxuICAgIHByb3BzOiBBZGRBbGFybVByb3BzXG4gICk6IE1ldHJpY1dpdGhBbGFybVN1cHBvcnQge1xuICAgIGxldCBhZGp1c3RlZE1ldHJpYyA9IG1ldHJpYztcbiAgICBmb3IgKGNvbnN0IGFkanVzdGVyIG9mIHRoaXMuYWRqdXN0ZXJzKSB7XG4gICAgICBhZGp1c3RlZE1ldHJpYyA9IGFkanVzdGVyLmFkanVzdE1ldHJpYyhhZGp1c3RlZE1ldHJpYywgYWxhcm1TY29wZSwgcHJvcHMpO1xuICAgIH1cblxuICAgIHJldHVybiBhZGp1c3RlZE1ldHJpYztcbiAgfVxufVxuIl19